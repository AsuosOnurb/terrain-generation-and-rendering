<?xml version="1.0"?>
<materialLib name="MaterialLib">

	<!--  ================================================ Textures ================================= -->
	<textures>
		<!-- Skybox Textures -->
		<texture name="Texture_Skybox" filename="textures/skybox/sky_hdri.jpg" mipmap= true />


		<!-- Terrain Textures -->
		<texture name="Texture_Grass_Albedo" filename="textures/terrain/grass/diffuse.jpg" mipmap= true />
		<texture name="Texture_Snow_Albedo" filename="textures/terrain/snow/diffuse.jpg" mipmap= true />
		<texture name="Texture_Sand_Albedo" filename="textures/terrain/sand/diffuse.jpg" mipmap= true />
		<texture name="Texture_Rock_Albedo" filename="textures/terrain/rock/diffuse.jpg" mipmap= true />


		<!-- Water Textures -->
		<texture name="Texture_Water" filename="textures/water/waterMap.jpg" mipmap= true />
	</textures>

	<!--  ================================================ Shaders ================================= -->
	<shaders>
		<shader name="Shader_Skybox" vs="shaders/skybox/sky.vert" ps="shaders/skybox/sky.frag" />

		<shader name="Shader_Terrain" vs="shaders/terrain/regular.vert" tc="shaders/terrain/regular.tesc" te="shaders/terrain/regular.tese" ps="shaders/terrain/regular.frag" />

		<shader name="Shader_Water" vs="shaders/water/water.vert" ps="shaders/water/water.frag" />

	</shaders>


	<!--  ================================================ States ================================= -->
	<states>
		<state name="cullFront">
			<CULL_TYPE value="FRONT" />
		</state>
	</states>


	<!--  ================================================ Materials ================================= -->
	<materials>

		<!--  ================================================ Skybox ================================= -->
		<material name="Material_Skybox">
			<shader name="Shader_Skybox">
				<values>
					<valueof uniform="m_pvm" type="RENDERER" context="CURRENT" component="PROJECTION_VIEW_MODEL" />
					<valueof uniform="m_model" type="RENDERER" context="CURRENT" component="MODEL" />
					<valueof uniform="m_view" type="RENDERER" context="CURRENT" component="VIEW" />

					<valueof uniform="tex" type="TEXTURE_BINDING" context="CURRENT" component="UNIT" id= 0 />


					<valueof uniform="sky_mode" type="RENDERER" context="CURRENT" component="sky_mode" />

					<valueof uniform="sun_theta" type="RENDERER" context="CURRENT" component="sun_theta" />

					<valueof uniform="sun_phi" type="RENDERER" context="CURRENT" component="sun_phi" />

					<valueof uniform="sun_rho" type="RENDERER" context="CURRENT" component="sun_rho" />

					<valueof uniform="camera_position" type="CAMERA" context="CURRENT" component="POSITION" />

				</values>
			</shader>
			<textures>
				<texture name="Texture_Skybox" UNIT= 0 />
			</textures>
			<state name="cullFront" />
		</material>


		<!--  ================================================ Terrain ================================= -->
		<material name="Material_Terrain">
			<shader name="Shader_Terrain">
				<values>
					<!-- Tesselation uniforms -->
					<valueof uniform="m_time" type="RENDERER" context="CURRENT" component="TIMER" />

					<valueof uniform="noise_function" type="RENDERER" context="CURRENT" component="noise_function" />


					<valueof uniform="noise_function" type="RENDERER" context="CURRENT" component="noise_function" />


					<valueof uniform="noise_scale" type="RENDERER" context="CURRENT" component="noise_scale" />

					<valueof uniform="noise_octaves" type="RENDERER" context="CURRENT" component="noise_octaves" />


					<valueof uniform="noise_lacunarity" type="RENDERER" context="CURRENT" component="noise_lacunarity" />


					<valueof uniform="noise_exponentiation" type="RENDERER" context="CURRENT" component="noise_exponentiation" />

					<valueof uniform="noise_gain" type="RENDERER" context="CURRENT" component="noise_gain" />


					<valueof uniform="noise_shift" type="RENDERER" context="CURRENT" component="noise_shift" />


					<valueof uniform="noise_height" type="RENDERER" context="CURRENT" component="noise_height" />

					<valueof uniform="apply_dynamic_lod" type="RENDERER" context="CURRENT" component="apply_dynamic_lod" />

					<valueof uniform="tesselation_dist_thresh" type="RENDERER" context="CURRENT" component="tesselation_dist_thresh" />

					<valueof uniform="max_outter_tesselation" type="RENDERER" context="CURRENT" component="max_outter_tesselation" />

					<valueof uniform="max_inner_tesselation" type="RENDERER" context="CURRENT" component="max_inner_tesselation" />

					<valueof uniform="easing_function" type="RENDERER" context="CURRENT" component="easing_function" />


					<!-- Misc -->
					<valueof uniform="m_pvm" type="RENDERER" context="CURRENT" component="PROJECTION_VIEW_MODEL" />

					<valueof uniform="m_pv" type="RENDERER" context="CURRENT" component="PROJECTION_VIEW" />

					<valueof uniform="m_model" type="RENDERER" context="CURRENT" component="MODEL" />

					<valueof uniform="m_view" type="RENDERER" context="CURRENT" component="VIEW" />

					<valueof uniform="m_normal" type="RENDERER" context="CURRENT" component="NORMAL" />

					<valueof uniform="camera_position" type="CAMERA" context="CURRENT" component="POSITION" />

					<!-- Lighting -->
					<valueof uniform="l_dir" type="LIGHT" context="Sun" component="DIRECTION" />

					<valueof uniform="specular" type="COLOR" context="CURRENT" component="SPECULAR" />

					<valueof uniform="shininess" type="COLOR" context="CURRENT" component="SHININESS" />

					<valueof uniform="sun_theta" type="RENDERER" context="CURRENT" component="sun_theta" />

					<valueof uniform="sun_phi" type="RENDERER" context="CURRENT" component="sun_phi" />


					<valueof uniform="sun_rho" type="RENDERER" context="CURRENT" component="sun_rho" />


					<!-- Texturing -->
					<valueof uniform="texture_grass_albedo" type="TEXTURE_BINDING" context="CURRENT" component="UNIT" id= 0 />
					<valueof uniform="texture_sand_albedo" type="TEXTURE_BINDING" context="CURRENT" component="UNIT" id= 1 />
					<valueof uniform="texture_rock_albedo" type="TEXTURE_BINDING" context="CURRENT" component="UNIT" id= 2 />
					<valueof uniform="texture_snow_albedo" type="TEXTURE_BINDING" context="CURRENT" component="UNIT" id= 3 />

					<valueof uniform="texture_tiling" type="RENDERER" context="CURRENT" component="texture_tiling" />

					<valueof uniform="grass_start" type="RENDERER" context="CURRENT" component="grass_start" />


					<!-- <valueof uniform="dirt_start" type="RENDERER" context="CURRENT" component="dirt_start" /> -->
					<valueof uniform="rock_start" type="RENDERER" context="CURRENT" component="rock_start" />
					<valueof uniform="snow_start" type="RENDERER" context="CURRENT" component="snow_start" />


					<!-- <valueof uniform="smoothstep_value" type="RENDERER" context="CURRENT" component="smoothstep_value" /> -->

					<!-- Other Shading -->

					<valueof uniform="color_coding" type="RENDERER" context="CURRENT" component="color_coding" />
					<valueof uniform="m_time" type="RENDERER" context="CURRENT" component="TIMER" />
				</values>

			</shader>

			<textures>
				<texture name="Texture_Grass_Albedo" UNIT= 0 />
				<texture name="Texture_Sand_Albedo" UNIT= 1 />
				<texture name="Texture_Rock_Albedo" UNIT= 2 />
				<texture name="Texture_Snow_Albedo" UNIT= 3 />
			</textures>
		</material>


		<!--  ================================================ Water ================================= -->
		<material name="Material_Water">
			<shader name="Shader_Water">
				<values>
					<valueof uniform="m_pvm" type="RENDERER" context="CURRENT" component="PROJECTION_VIEW_MODEL" />
					<valueof uniform="m_model" type="RENDERER" context="CURRENT" component="MODEL" />
					<valueof uniform="m_view" type="RENDERER" context="CURRENT" component="VIEW" />

					<valueof uniform="displacement_map" type="TEXTURE_BINDING" context="CURRENT" component="UNIT" id= 0 />


					<valueof uniform="sky_mode" type="RENDERER" context="CURRENT" component="sky_mode" />


					<valueof uniform="sun_theta" type="RENDERER" context="CURRENT" component="sun_theta" />

					<valueof uniform="sun_phi" type="RENDERER" context="CURRENT" component="sun_phi" />


					<valueof uniform="sun_rho" type="RENDERER" context="CURRENT" component="sun_rho" />

					<valueof uniform="camera_position" type="CAMERA" context="CURRENT" component="POSITION" />


				</values>
			</shader>
			<textures>
				<texture name="Texture_Water" UNIT= 0 />
			</textures>
		</material>


	</materials>

</materialLib>